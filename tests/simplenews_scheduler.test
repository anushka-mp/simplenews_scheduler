<?php

/**
 * @file
 * Tests for Simplenews Scheduler.
 */

/**
 * Test scheduled edition creation.
 */
class SimpleNewsSchedulerNodeCreationTest extends DrupalWebTestCase {
  protected $privileged_user;

  /**
   * Provides information about this test.
   */
  public static function getInfo() {
    return array(
      'name' => 'Newsletter generation test',
      'description' => 'Testing generation of newsletters',
      'group' => 'Simplenews Scheduler',
    );
  }

  /**
   * Declares the module dependencies for the test.
   */
  function setUp() {
    parent::setUp('simplenews', 'token', 'date', 'simplenews_scheduler');

    $this->privileged_user = $this->drupalCreateUser(array(
      'access content',
      'administer nodes',
      'create simplenews content',
      'edit own simplenews content',
      'send newsletter',
      'send scheduled newsletters',
      'overview scheduled newsletters',
      ));
    $this->drupalLogin($this->privileged_user);    
  }

  /**
   * Basic simplenews newsletter generation test
   * create a simplenews node,
   */
  function testNewsletterGeneration() {
    $edit = array();
    $title ="newsletter " . $this->randomName(8);

    $edit = array();
    $edit['title'] = $title;
    $edit["body[und][0][value]"] = $this->randomName(16);
    $this->drupalPost('node/add/simplenews', $edit, t('Save'));        
    $this->assertText($title);

    preg_match('|node/(\d+)$|', $this->getUrl(), $matches);
    $node = node_load($matches[1]);

    // Make sure it knows no editions created yet.
    $this->drupalGet("node/{$node->nid}/editions");
    $this->assertText(t("No scheduled newsletter editions have been sent."));
    
    // Now create the simplenews schedule configuration.
    $this->drupalGet("node/{$node->nid}/simplenews");
    $this->assertText(t("Send newsletter according to schedule"));
    
    $edit = array();
    $edit["simplenews[send]"] = '4';
    $edit["simplenews[scheduler][interval]"] = "hour";

    // Specify a fixed start time in the past to be able to have a known edition
    // creation time that can be checked.
    $edit["simplenews[scheduler][start_date][year]"] = '2012';
    $edit["simplenews[scheduler][start_date][month]"] = '3';
    $edit["simplenews[scheduler][start_date][day]"] = '1';
    $edit["simplenews[scheduler][start_date][hour]"] = '14';
    $edit["simplenews[scheduler][start_date][minute]"] = '05';

    $this->drupalPost("node/{$node->nid}/simplenews", $edit, t('Submit'));


    // Make sure it knows no editions created yet.
    $this->drupalGet("node/{$node->nid}/editions");
    $this->assertText(t("No scheduled newsletter editions have been sent."));

    // Call our hook to generate it.
    simplenews_scheduler_cron();
    
    // See if it was created.
    $this->drupalGet("node/{$node->nid}/editions");
    $this->assertText($title);
    $this->assertNoText(t("No scheduled newsletter editions have been sent."));

    // Go to node and verify creation time. Due to the breadcrumb, this is the
    // second link with the label on the page.
    $this->clickLink($title, 1);

    $this->assertText(t('This is a newsletter edititon. View the the master template of this newsletter here'));
    $this->assertText(t('Submitted by @name on Fri, 03/02/2012 - 14:05', array('@name' => format_username($this->privileged_user))));
  }
}
